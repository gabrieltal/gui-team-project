
/**
 * *************************************************************
 * file: Colors.java
 * authors: Garrick Lee, Paul Chiou, Gabriel Talavera
 * class: CS 245 â€“ Programming Graphical User Interfaces
 *
 * assignment: Quarter Project
 * date last modified: 02/14/2016
 *
 * purpose: JPanel for the Colors game, displays date and time,
 * shows all the colors and will randomize button locations after
 * each turn.
 *
 ***************************************************************
 */
import java.awt.event.ActionListener;
//import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.Color.*;

import java.util.ArrayList;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random;

public class Colors extends javax.swing.JPanel {

    Random rand = new Random();
    private String[] colorText = {"Green", "Yellow", "Red", "Blue", "Purple"};
    private int textColorIndex = -1;
    public int count = 0;

    private int points;
    private Timer swTimer;

    /**
     * Creates new form Colors
     */
    public Colors() {
        swTimer = new Timer(1000, timerAL);
        swTimer.start();
        initComponents();

        jLabelBlueButton.setToolTipText("<html>Click the matching visible color of the word.</html>");
        jLabelGreenButton.setToolTipText("<html>Click the matching visible color of the word.</html>");
        jLabelPurpleButton.setToolTipText("<html>Click the matching visible color of the word.</html>");
        jLabelRedButton.setToolTipText("<html>Click the matching visible color of the word.</html>");
        jLabelYellowButton.setToolTipText("<html>Click the matching visible color of the word.</html>");
        skip.setToolTipText("<html>Click to skip game, you will receive 0 points.</html>");

        points = MainFrm.getScore();
        jLabelScore.setText("Points: " + points);
        randomization();
    }

    //method: checkSelection
    //purpose: checks to see if the user selected the correct button and then
    //checks if the user has already played 5 rounds, if not then it will 
    //randomize the text and the buttons for the next round
    public void checkSelection(int choice) {
        if (choice == textColorIndex) {
            points += 100;
            jLabelScore.setText("Points: " + points);
        }
        ++count;
        if (count == 5) {
            gameOver();
        } else {
            randomization();
            randomizeLocations();
        }
    }

    //method: randomization
    //purpose: Randomizes the color of the text and randomizes the text 
    //to display a new random word
    public void randomization() {
        jLabelColorText.setText(colorText[rand.nextInt(colorText.length)]);
        textColorIndex = rand.nextInt(5);
        switch (textColorIndex) {
            case 0:
                this.jLabelColorText.setForeground(Color.green);
                break;
            case 1:
                this.jLabelColorText.setForeground(Color.yellow);
                break;
            case 2:
                this.jLabelColorText.setForeground(Color.red);
                break;
            case 3:
                this.jLabelColorText.setForeground(Color.blue);
                break;
            case 4:
                this.jLabelColorText.setForeground(Color.magenta);
                break;
        }
    }

    //method: actionListener for timerAL
    //purpose: Displays the time and date
    ActionListener timerAL = new ActionListener() {
        public void actionPerformed(ActionEvent ae) {
            DateFormat dateFormat = new SimpleDateFormat("MMMM dd, yyyy    HH:mm:ss");
            //get current date time with Date()
            Date date = new Date();
            //get current date time with Calendar()
            Calendar cal = Calendar.getInstance();

            datetime.setText(dateFormat.format(cal.getTime()));
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headline = new javax.swing.JLabel();
        skip = new javax.swing.JButton();
        datetime = new javax.swing.JTextField();
        jLabelScore = new javax.swing.JLabel();
        jLabelColorText = new javax.swing.JLabel();
        jLabelRedButton = new javax.swing.JLabel();
        jLabelYellowButton = new javax.swing.JLabel();
        jLabelGreenButton = new javax.swing.JLabel();
        jLabelPurpleButton = new javax.swing.JLabel();
        jLabelBlueButton = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(600, 400));

        headline.setFont(new java.awt.Font("Stencil", 0, 48)); // NOI18N
        headline.setForeground(new java.awt.Color(222, 0, 0));
        headline.setText("COLORS");

        skip.setText("Skip");
        skip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipActionPerformed(evt);
            }
        });

        datetime.setEditable(false);
        datetime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        datetime.setText("Date Time");
        datetime.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabelScore.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelScore.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelScore.setText("Points: 0");

        jLabelColorText.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelColorText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelColorText.setText("Green");

        jLabelRedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/red_up.png"))); // NOI18N
        jLabelRedButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRedButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelRedButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelRedButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelRedButtonMousePressed(evt);
            }
        });

        jLabelYellowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/yellow_up.png"))); // NOI18N
        jLabelYellowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelYellowButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelYellowButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelYellowButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelYellowButtonMousePressed(evt);
            }
        });

        jLabelGreenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/green_up.png"))); // NOI18N
        jLabelGreenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGreenButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelGreenButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelGreenButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelGreenButtonMousePressed(evt);
            }
        });

        jLabelPurpleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/purple_up.png"))); // NOI18N
        jLabelPurpleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPurpleButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelPurpleButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelPurpleButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelPurpleButtonMousePressed(evt);
            }
        });

        jLabelBlueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/blue_up.png"))); // NOI18N
        jLabelBlueButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBlueButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelBlueButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelBlueButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelBlueButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelColorText, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPurpleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(jLabelBlueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabelYellowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabelGreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabelRedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headline, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelScore, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(datetime, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(skip, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datetime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelScore, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skip))
                    .addComponent(headline, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelYellowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelColorText, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelPurpleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBlueButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void skipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipActionPerformed
        this.setVisible(false);
        MainFrm.setScore(0 + MainFrm.getScore());
        MainFrm.displaySudoku();
    }//GEN-LAST:event_skipActionPerformed

    private void jLabelYellowButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelYellowButtonMouseClicked
        checkSelection(1);
        jLabelYellowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/yellow_over.png")));
    }//GEN-LAST:event_jLabelYellowButtonMouseClicked

    private void jLabelGreenButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGreenButtonMouseClicked
        checkSelection(0);
        jLabelGreenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/green_over.png")));
    }//GEN-LAST:event_jLabelGreenButtonMouseClicked

    private void jLabelRedButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRedButtonMouseClicked
        checkSelection(2);
        jLabelRedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/red_over.png")));
    }//GEN-LAST:event_jLabelRedButtonMouseClicked

    private void jLabelPurpleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPurpleButtonMouseClicked
        checkSelection(4);
        jLabelPurpleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/purple_over.png")));
    }//GEN-LAST:event_jLabelPurpleButtonMouseClicked

    private void jLabelBlueButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBlueButtonMouseClicked
        checkSelection(3);
        jLabelBlueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/blue_over.png")));
    }//GEN-LAST:event_jLabelBlueButtonMouseClicked

    //method: randomizeLocations
    //purpose: randomizes the locations of the buttons
    private void randomizeLocations() {
        int[] position = {95, 80, 248, 80, 400, 80, 145, 275, 335, 275};
        int random = rand.nextInt(5);
        this.setLayout(null);
        this.add(jLabelGreenButton);
        this.add(jLabelYellowButton);
        this.add(jLabelRedButton);
        this.add(jLabelBlueButton);
        this.add(jLabelPurpleButton);
        for (int i = 0; i < 10; i++) {

            switch (random) {
                case 0:
                    jLabelGreenButton.setBounds(position[i++], position[i], 100, 100);
                    random++;
                    break;
                case 1:
                    jLabelYellowButton.setBounds(position[i++], position[i], 100, 100);
                    random++;
                    break;
                case 2:
                    jLabelRedButton.setBounds(position[i++], position[i], 100, 100);
                    random++;
                    break;
                case 3:
                    jLabelBlueButton.setBounds(position[i++], position[i], 100, 100);
                    random++;
                    break;
                case 4:
                    jLabelPurpleButton.setBounds(position[i++], position[i], 100, 100);
                    random = 0;
                    break;
            }
        }
    }

    private void jLabelGreenButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGreenButtonMouseEntered
        // TODO add your handling code here:
        jLabelGreenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/green_over.png")));
    }//GEN-LAST:event_jLabelGreenButtonMouseEntered

    private void jLabelGreenButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGreenButtonMouseExited
        // TODO add your handling code here:
        jLabelGreenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/green_up.png")));
    }//GEN-LAST:event_jLabelGreenButtonMouseExited

    private void jLabelGreenButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGreenButtonMousePressed
        // TODO add your handling code here:
        jLabelGreenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/green_down.png")));
    }//GEN-LAST:event_jLabelGreenButtonMousePressed

    private void jLabelRedButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRedButtonMouseEntered
        // TODO add your handling code here:
        jLabelRedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/red_over.png")));
    }//GEN-LAST:event_jLabelRedButtonMouseEntered

    private void jLabelRedButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRedButtonMouseExited
        // TODO add your handling code here:
        jLabelRedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/red_up.png")));
    }//GEN-LAST:event_jLabelRedButtonMouseExited

    private void jLabelRedButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRedButtonMousePressed
        // TODO add your handling code here:
        jLabelRedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/red_down.png")));
    }//GEN-LAST:event_jLabelRedButtonMousePressed

    private void jLabelYellowButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelYellowButtonMouseEntered
        // TODO add your handling code here:
        jLabelYellowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/yellow_over.png")));
    }//GEN-LAST:event_jLabelYellowButtonMouseEntered

    private void jLabelYellowButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelYellowButtonMouseExited
        // TODO add your handling code here:
        jLabelYellowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/yellow_up.png")));
    }//GEN-LAST:event_jLabelYellowButtonMouseExited

    private void jLabelYellowButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelYellowButtonMousePressed
        // TODO add your handling code here:
        jLabelYellowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/yellow_down.png")));
    }//GEN-LAST:event_jLabelYellowButtonMousePressed

    private void jLabelPurpleButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPurpleButtonMouseEntered
        // TODO add your handling code here:
        jLabelPurpleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/purple_over.png")));
    }//GEN-LAST:event_jLabelPurpleButtonMouseEntered

    private void jLabelPurpleButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPurpleButtonMouseExited
        // TODO add your handling code here:
        jLabelPurpleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/purple_up.png")));
    }//GEN-LAST:event_jLabelPurpleButtonMouseExited

    private void jLabelPurpleButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPurpleButtonMousePressed
        // TODO add your handling code here:
        jLabelPurpleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/purple_down.png")));
    }//GEN-LAST:event_jLabelPurpleButtonMousePressed

    private void jLabelBlueButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBlueButtonMouseEntered
        // TODO add your handling code here:
        jLabelBlueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/blue_over.png")));
    }//GEN-LAST:event_jLabelBlueButtonMouseEntered

    private void jLabelBlueButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBlueButtonMouseExited
        // TODO add your handling code here:
        jLabelBlueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/blue_up.png")));
    }//GEN-LAST:event_jLabelBlueButtonMouseExited

    private void jLabelBlueButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBlueButtonMousePressed
        // TODO add your handling code here:
        jLabelBlueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/blue_down.png")));
    }//GEN-LAST:event_jLabelBlueButtonMousePressed

    private void enableButtons() {
        jLabelColorText.setVisible(true);
        jLabelGreenButton.setVisible(true);
        jLabelBlueButton.setVisible(true);
        jLabelYellowButton.setVisible(true);
        jLabelRedButton.setVisible(true);
        jLabelPurpleButton.setVisible(true);
    }

    private void disableButtons() {
        //jLabelColorText.setVisible(false);
        jLabelGreenButton.setVisible(false);
        jLabelBlueButton.setVisible(false);
        jLabelYellowButton.setVisible(false);
        jLabelRedButton.setVisible(false);
        jLabelPurpleButton.setVisible(false);
    }

    // method: gameOver
    // purpose: pause for 2.5 seconds, go to finalScore screen
    // display correct word with red letters
    private void gameOver() {
        MainFrm.setScore(points);
        disableButtons();
        count = 0;
        textColorIndex = -1;
        
        MainFrm.displaySudoku();
        
        /*
        jLabelColorText.setForeground(new java.awt.Color(222, 0, 0));
        jLabelColorText.setText("Loading...");
        
        
        Timer gameOverTimer = new Timer(2500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                // automatically advance to final score
                MainFrm.displayFinalScore();
            }
        });
        gameOverTimer.setRepeats(false); // Only execute once
        gameOverTimer.start(); // Go go go!
        */
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField datetime;
    private javax.swing.JLabel headline;
    private javax.swing.JLabel jLabelBlueButton;
    private javax.swing.JLabel jLabelColorText;
    private javax.swing.JLabel jLabelGreenButton;
    private javax.swing.JLabel jLabelPurpleButton;
    private javax.swing.JLabel jLabelRedButton;
    private javax.swing.JLabel jLabelScore;
    private javax.swing.JLabel jLabelYellowButton;
    private javax.swing.JButton skip;
    // End of variables declaration//GEN-END:variables
}
