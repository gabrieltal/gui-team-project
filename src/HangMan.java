
/**
 * *************************************************************
 * file: HangMan.java
 * authors: Garrick Lee, Paul Chiou, Gabriel Talavera
 * class: CS 245 â€“ Programming Graphical User Interfaces
 *
 * assignment: Quarter Project
 * date last modified: 01/31/2016
 *
 * purpose: JPanel for HangMan game, displays date and time, skip button
 *
 ***************************************************************
 */
import java.awt.event.ActionListener;
//import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.Color.*;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class HangMan extends javax.swing.JPanel {

    private final String[] library = {"abstract", "cemetery", "nurse", "pharmacy",
        "climbing"};
    private String word = "";
    public int spaces;
    public int count = 0;
    private int points;
    private int incorrectCount = 0;
    private boolean[] lettersStatus;
    private Timer swTimer;

    /**
     * Creates new form HangMan
     */
    // method: displayCorrectLines
    // purpose: displays lines depending on word length
    public void displayCorrectLines() {
        if (spaces == 5) {
            jLabelCorrectLetter5.setVisible(false);
            jLabelCorrectLetter6.setVisible(false);
            jLabelCorrectLetter7.setVisible(false);
            //jPanelCorrectLetters.setSize(800, 400);
        } else {
            jLabelCorrectLetter5.setVisible(true);
            jLabelCorrectLetter6.setVisible(true);
            jLabelCorrectLetter7.setVisible(true);
            jPanelCorrectLetters.setSize(350, 55);
        }
    }

    public HangMan() {
        initComponents();
        reset();
        
        skip.setToolTipText("<html>Click to skip game, you will receive 0 points.</html>");
        jButtonContinue.setToolTipText("<html>Click to continue</html>");
        a.setToolTipText("<html>Click to guess 'A'</html>");
        b.setToolTipText("<html>Click to guess 'B'</html>");
        c.setToolTipText("<html>Click to guess 'C'</html>");
        d.setToolTipText("<html>Click to guess 'D'</html>");
        e.setToolTipText("<html>Click to guess 'E'</html>");
        f.setToolTipText("<html>Click to guess 'F'</html>");
        g.setToolTipText("<html>Click to guess 'G'</html>");
        h.setToolTipText("<html>Click to guess 'H'</html>");
        i.setToolTipText("<html>Click to guess 'I'</html>");
        j.setToolTipText("<html>Click to guess 'J'</html>");
        k.setToolTipText("<html>Click to guess 'K'</html>");
        l.setToolTipText("<html>Click to guess 'L'</html>");
        m.setToolTipText("<html>Click to guess 'M'</html>");
        n.setToolTipText("<html>Click to guess 'N'</html>");
        o.setToolTipText("<html>Click to guess 'O'</html>");
        p.setToolTipText("<html>Click to guess 'P'</html>");
        q.setToolTipText("<html>Click to guess 'Q'</html>");
        r.setToolTipText("<html>Click to guess 'R'</html>");
        s.setToolTipText("<html>Click to guess 'S'</html>");
        t.setToolTipText("<html>Click to guess 'T'</html>");
        u.setToolTipText("<html>Click to guess 'U'</html>");
        v.setToolTipText("<html>Click to guess 'V'</html>");
        w.setToolTipText("<html>Click to guess 'W'</html>");
        x.setToolTipText("<html>Click to guess 'X'</html>");
        y.setToolTipText("<html>Click to guess 'Y'</html>");
        z.setToolTipText("<html>Click to guess 'Z'</html>");

        swTimer = new Timer(1000, timerAL);
        swTimer.start();
       
    }

    ActionListener timerAL = new ActionListener() {
        public void actionPerformed(ActionEvent ae) {
            DateFormat dateFormat = new SimpleDateFormat("MMMM dd, yyyy    HH:mm:ss");
            //get current date time with Date()
            Date date = new Date();
            //get current date time with Calendar()
            Calendar cal = Calendar.getInstance();

            datetime.setText(dateFormat.format(cal.getTime()));
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        r = new javax.swing.JButton();
        z = new javax.swing.JButton();
        s = new javax.swing.JButton();
        w = new javax.swing.JButton();
        x = new javax.swing.JButton();
        d = new javax.swing.JButton();
        e = new javax.swing.JButton();
        c = new javax.swing.JButton();
        f = new javax.swing.JButton();
        t = new javax.swing.JButton();
        v = new javax.swing.JButton();
        g = new javax.swing.JButton();
        y = new javax.swing.JButton();
        b = new javax.swing.JButton();
        h = new javax.swing.JButton();
        u = new javax.swing.JButton();
        n = new javax.swing.JButton();
        i = new javax.swing.JButton();
        m = new javax.swing.JButton();
        j = new javax.swing.JButton();
        o = new javax.swing.JButton();
        k = new javax.swing.JButton();
        p = new javax.swing.JButton();
        a = new javax.swing.JButton();
        q = new javax.swing.JButton();
        l = new javax.swing.JButton();
        headline = new javax.swing.JLabel();
        skip = new javax.swing.JButton();
        datetime = new javax.swing.JTextField();
        jLabelHangmanGraphic = new javax.swing.JLabel();
        jLabelScore = new javax.swing.JLabel();
        jPanelCorrectLetters = new javax.swing.JPanel();
        jLabelCorrectLetter0 = new javax.swing.JLabel();
        jLabelCorrectLetter1 = new javax.swing.JLabel();
        jLabelCorrectLetter2 = new javax.swing.JLabel();
        jLabelCorrectLetter3 = new javax.swing.JLabel();
        jLabelCorrectLetter4 = new javax.swing.JLabel();
        jLabelCorrectLetter5 = new javax.swing.JLabel();
        jLabelCorrectLetter6 = new javax.swing.JLabel();
        jLabelCorrectLetter7 = new javax.swing.JLabel();
        jButtonContinue = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(600, 400));

        r.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        r.setText("R");
        r.setMaximumSize(new java.awt.Dimension(40, 20));
        r.setMinimumSize(new java.awt.Dimension(40, 20));
        r.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rActionPerformed(evt);
            }
        });

        z.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        z.setText("Z");
        z.setMaximumSize(new java.awt.Dimension(40, 20));
        z.setMinimumSize(new java.awt.Dimension(40, 20));
        z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zActionPerformed(evt);
            }
        });

        s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        s.setText("S");
        s.setMaximumSize(new java.awt.Dimension(40, 20));
        s.setMinimumSize(new java.awt.Dimension(40, 20));
        s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sActionPerformed(evt);
            }
        });

        w.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        w.setText("W");
        w.setMaximumSize(new java.awt.Dimension(40, 20));
        w.setMinimumSize(new java.awt.Dimension(40, 20));
        w.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wActionPerformed(evt);
            }
        });

        x.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        x.setText("X");
        x.setMaximumSize(new java.awt.Dimension(40, 20));
        x.setMinimumSize(new java.awt.Dimension(40, 20));
        x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xActionPerformed(evt);
            }
        });

        d.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        d.setText("D");
        d.setMaximumSize(new java.awt.Dimension(40, 20));
        d.setMinimumSize(new java.awt.Dimension(40, 20));
        d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dActionPerformed(evt);
            }
        });

        e.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        e.setText("E");
        e.setMaximumSize(new java.awt.Dimension(40, 20));
        e.setMinimumSize(new java.awt.Dimension(40, 20));
        e.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eActionPerformed(evt);
            }
        });

        c.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        c.setText("C");
        c.setMaximumSize(new java.awt.Dimension(40, 20));
        c.setMinimumSize(new java.awt.Dimension(40, 20));
        c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActionPerformed(evt);
            }
        });

        f.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        f.setText("F");
        f.setMaximumSize(new java.awt.Dimension(40, 20));
        f.setMinimumSize(new java.awt.Dimension(40, 20));
        f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fActionPerformed(evt);
            }
        });

        t.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        t.setText("T");
        t.setMaximumSize(new java.awt.Dimension(40, 20));
        t.setMinimumSize(new java.awt.Dimension(40, 20));
        t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tActionPerformed(evt);
            }
        });

        v.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        v.setText("V");
        v.setMaximumSize(new java.awt.Dimension(40, 20));
        v.setMinimumSize(new java.awt.Dimension(40, 20));
        v.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vActionPerformed(evt);
            }
        });

        g.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        g.setText("G");
        g.setMaximumSize(new java.awt.Dimension(40, 20));
        g.setMinimumSize(new java.awt.Dimension(40, 20));
        g.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gActionPerformed(evt);
            }
        });

        y.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        y.setText("Y");
        y.setMaximumSize(new java.awt.Dimension(40, 20));
        y.setMinimumSize(new java.awt.Dimension(40, 20));
        y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yActionPerformed(evt);
            }
        });

        b.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        b.setText("B");
        b.setMaximumSize(new java.awt.Dimension(40, 20));
        b.setMinimumSize(new java.awt.Dimension(40, 20));
        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionPerformed(evt);
            }
        });

        h.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        h.setText("H");
        h.setMaximumSize(new java.awt.Dimension(40, 20));
        h.setMinimumSize(new java.awt.Dimension(40, 20));
        h.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hActionPerformed(evt);
            }
        });

        u.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        u.setText("U");
        u.setMaximumSize(new java.awt.Dimension(40, 20));
        u.setMinimumSize(new java.awt.Dimension(40, 20));
        u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uActionPerformed(evt);
            }
        });

        n.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        n.setText("N");
        n.setMaximumSize(new java.awt.Dimension(40, 20));
        n.setMinimumSize(new java.awt.Dimension(40, 20));
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });

        i.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        i.setText("I");
        i.setMaximumSize(new java.awt.Dimension(40, 20));
        i.setMinimumSize(new java.awt.Dimension(40, 20));
        i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iActionPerformed(evt);
            }
        });

        m.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        m.setText("M");
        m.setMaximumSize(new java.awt.Dimension(40, 20));
        m.setMinimumSize(new java.awt.Dimension(40, 20));
        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });

        j.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        j.setText("J");
        j.setMaximumSize(new java.awt.Dimension(40, 20));
        j.setMinimumSize(new java.awt.Dimension(40, 20));
        j.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActionPerformed(evt);
            }
        });

        o.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        o.setText("O");
        o.setMaximumSize(new java.awt.Dimension(40, 20));
        o.setMinimumSize(new java.awt.Dimension(40, 20));
        o.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oActionPerformed(evt);
            }
        });

        k.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        k.setText("K");
        k.setMaximumSize(new java.awt.Dimension(40, 20));
        k.setMinimumSize(new java.awt.Dimension(40, 20));
        k.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kActionPerformed(evt);
            }
        });

        p.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        p.setText("P");
        p.setMaximumSize(new java.awt.Dimension(40, 20));
        p.setMinimumSize(new java.awt.Dimension(40, 20));
        p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pActionPerformed(evt);
            }
        });

        a.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        a.setText("A");
        a.setMaximumSize(new java.awt.Dimension(40, 20));
        a.setMinimumSize(new java.awt.Dimension(40, 20));
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        q.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        q.setText("Q");
        q.setMaximumSize(new java.awt.Dimension(40, 20));
        q.setMinimumSize(new java.awt.Dimension(40, 20));
        q.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qActionPerformed(evt);
            }
        });

        l.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        l.setText("L");
        l.setMaximumSize(new java.awt.Dimension(40, 20));
        l.setMinimumSize(new java.awt.Dimension(40, 20));
        l.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lActionPerformed(evt);
            }
        });

        headline.setFont(new java.awt.Font("Stencil", 0, 48)); // NOI18N
        headline.setForeground(new java.awt.Color(222, 0, 0));
        headline.setText("HANGMAN");

        skip.setText("Skip");
        skip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipActionPerformed(evt);
            }
        });

        datetime.setEditable(false);
        datetime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        datetime.setText("Date Time");
        datetime.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman0.png"))); // NOI18N

        jLabelScore.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelScore.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelScore.setText("Points: 100");

        jLabelCorrectLetter0.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter0.setText("_");
        jLabelCorrectLetter0.setOpaque(true);

        jLabelCorrectLetter1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter1.setText("_");
        jLabelCorrectLetter1.setOpaque(true);

        jLabelCorrectLetter2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter2.setText("_");
        jLabelCorrectLetter2.setOpaque(true);

        jLabelCorrectLetter3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter3.setText("_");
        jLabelCorrectLetter3.setOpaque(true);

        jLabelCorrectLetter4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter4.setText("_");
        jLabelCorrectLetter4.setOpaque(true);

        jLabelCorrectLetter5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter5.setText("_");
        jLabelCorrectLetter5.setOpaque(true);

        jLabelCorrectLetter6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter6.setText("_");
        jLabelCorrectLetter6.setOpaque(true);

        jLabelCorrectLetter7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelCorrectLetter7.setText("_");
        jLabelCorrectLetter7.setOpaque(true);

        javax.swing.GroupLayout jPanelCorrectLettersLayout = new javax.swing.GroupLayout(jPanelCorrectLetters);
        jPanelCorrectLetters.setLayout(jPanelCorrectLettersLayout);
        jPanelCorrectLettersLayout.setHorizontalGroup(
            jPanelCorrectLettersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCorrectLettersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCorrectLetter0)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter1)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter2)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter3)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter4)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter5)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter6)
                .addGap(18, 18, 18)
                .addComponent(jLabelCorrectLetter7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCorrectLettersLayout.setVerticalGroup(
            jPanelCorrectLettersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCorrectLettersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCorrectLettersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCorrectLetter0)
                    .addComponent(jLabelCorrectLetter1)
                    .addComponent(jLabelCorrectLetter2)
                    .addComponent(jLabelCorrectLetter3)
                    .addComponent(jLabelCorrectLetter4)
                    .addComponent(jLabelCorrectLetter5)
                    .addComponent(jLabelCorrectLetter6)
                    .addComponent(jLabelCorrectLetter7)))
        );

        jButtonContinue.setFont(new java.awt.Font("Tahoma", 0, 14));
        jButtonContinue.setVisible(false);
        jButtonContinue.setText("Continue");
        jButtonContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(headline, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datetime, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(jLabelHangmanGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                                        .addComponent(skip))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(jLabelScore))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(v, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(o, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jPanelCorrectLetters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 78, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headline, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(datetime, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHangmanGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(skip)
                                .addGap(43, 43, 43)
                                .addComponent(jLabelScore, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCorrectLetters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(o, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(v, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sActionPerformed
        s.setEnabled(false);
        checkLetter('s');
    }//GEN-LAST:event_sActionPerformed

    private void dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dActionPerformed
        d.setEnabled(false);
        checkLetter('d');
    }//GEN-LAST:event_dActionPerformed

    private void skipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipActionPerformed
        //this.setVisible(false);
        
        points = 0;
        MainFrm.setScore(points);
        jLabelScore.setText("Points: " + points);
        jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman6.png")));
        gameOver();
        //reset();
    }//GEN-LAST:event_skipActionPerformed

    private void checkLetter(char letter) {
        int letterIndex = word.indexOf(letter);
        if (letterIndex != -1) {
            correctGuess(letter);
        } else {
            incorrectGuess(letter);
        }

    }

    // method: correctGuess
    // purpose: if guess is correct display letter
    private void correctGuess(char letter) {
        int letterIndex = word.indexOf(letter);
        while (letterIndex >= 0) {
            switch (letterIndex) {
                case 0:
                    jLabelCorrectLetter0.setText("" + letter);
                    lettersStatus[0] = true;
                    break;
                case 1:
                    jLabelCorrectLetter1.setText("" + letter);
                    lettersStatus[1] = true;
                    break;
                case 2:
                    jLabelCorrectLetter2.setText("" + letter);
                    lettersStatus[2] = true;
                    break;
                case 3:
                    jLabelCorrectLetter3.setText("" + letter);
                    lettersStatus[3] = true;
                    break;
                case 4:
                    jLabelCorrectLetter4.setText("" + letter);
                    lettersStatus[4] = true;
                    break;
                case 5:
                    jLabelCorrectLetter5.setText("" + letter);
                    lettersStatus[5] = true;
                    break;
                case 6:
                    jLabelCorrectLetter6.setText("" + letter);
                    lettersStatus[6] = true;
                    break;
                case 7:
                    jLabelCorrectLetter7.setText("" + letter);
                    lettersStatus[7] = true;
                    break;
            }
            letterIndex = word.indexOf(letter, letterIndex + 1);
            count++;
        }
        if (count == word.length()) {   //Completed Correctly!!
            //this.setVisible(false);
            //MainFrm.setScore(points);
            //jButtonContinue.setVisible(true);
//            MainFrm.displayFinalScore();
//            reset();
            gameOver();
        }
    }

    // method: reset
    // purpose: resets page
    public void reset() {
        //MainFrm.setScore(points);
        jButtonContinue.setVisible(false);
        word = library[(int) (Math.random() * library.length)];
        spaces = word.length();
        lettersStatus = new boolean[spaces];
        this.setVisible(false);
        count = 0;
        points = 100;
        incorrectCount = 0;
        displayCorrectLines();
        jLabelScore.setText("Points: " + points);
        jLabelCorrectLetter0.setText("_");
        jLabelCorrectLetter1.setText("_");
        jLabelCorrectLetter2.setText("_");
        jLabelCorrectLetter3.setText("_");
        jLabelCorrectLetter4.setText("_");
        jLabelCorrectLetter5.setText("_");
        jLabelCorrectLetter6.setText("_");
        jLabelCorrectLetter7.setText("_");
        jLabelCorrectLetter0.setForeground(Color.black);
        jLabelCorrectLetter1.setForeground(Color.black);
        jLabelCorrectLetter2.setForeground(Color.black);
        jLabelCorrectLetter3.setForeground(Color.black);
        jLabelCorrectLetter4.setForeground(Color.black);
        jLabelCorrectLetter5.setForeground(Color.black);
        jLabelCorrectLetter6.setForeground(Color.black);
        jLabelCorrectLetter7.setForeground(Color.black);
        
        skip.setEnabled(true);
        a.setEnabled(true);
        b.setEnabled(true);
        c.setEnabled(true);
        d.setEnabled(true);
        e.setEnabled(true);
        f.setEnabled(true);
        g.setEnabled(true);
        h.setEnabled(true);
        i.setEnabled(true);
        j.setEnabled(true);
        k.setEnabled(true);
        l.setEnabled(true);
        m.setEnabled(true);
        n.setEnabled(true);
        o.setEnabled(true);
        p.setEnabled(true);
        q.setEnabled(true);
        r.setEnabled(true);
        s.setEnabled(true);
        t.setEnabled(true);
        u.setEnabled(true);
        v.setEnabled(true);
        w.setEnabled(true);
        x.setEnabled(true);
        y.setEnabled(true);
        z.setEnabled(true);

        jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman0.png")));
    }

    // method: incorrectGuess
    // purpose: if incorrect display hangman image, after 6 incorrect end game
    private void incorrectGuess(char letter) {
        points -= 10;
        incorrectCount++;
        jLabelScore.setText("Points: " + points);

        if (incorrectCount < 6) {
            switch (incorrectCount) {
                case 0:
                    jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman0.png")));
                    break;
                case 1:
                    jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman1.png")));
                    break;
                case 2:
                    jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman2.png")));
                    break;
                case 3:
                    jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman3.png")));
                    break;
                case 4:
                    jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman4.png")));
                    break;
                case 5:
                    jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman5.png")));
                    break;
            }
        } else {
            //Failure!!
            jLabelHangmanGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman6.png")));

            //MainFrm.setScore(points);
            //jButtonContinue.setVisible(true);
//            this.setVisible(false);
//            MainFrm.displayFinalScore();
//            reset();
            gameOver();
        }

    }

    // method: gameOver
    // purpose: pause for 2.5 seconds, go to finalScore screen
    // display correct word with red letters
    private void gameOver() {
        Timer gameOverTimer = new Timer(2500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                // automatically advance to final score

                //MainFrm.displayFinalScore();
                MainFrm.setScore(points);
                MainFrm.displayColors();
                reset();

            }
        });
        gameOverTimer.setRepeats(false); // Only execute once
        gameOverTimer.start(); // Go go go!

        for (int i = 0; i < spaces; i++) {
            if (lettersStatus[i] == false) {
                switch (i) {
                    case 0:
                        jLabelCorrectLetter0.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter0.setForeground(Color.red);
                        break;
                    case 1:
                        jLabelCorrectLetter1.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter1.setForeground(Color.red);
                        break;
                    case 2:
                        jLabelCorrectLetter2.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter2.setForeground(Color.red);
                        break;
                    case 3:
                        jLabelCorrectLetter3.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter3.setForeground(Color.red);
                        break;
                    case 4:
                        jLabelCorrectLetter4.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter4.setForeground(Color.red);
                        break;
                    case 5:
                        jLabelCorrectLetter5.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter5.setForeground(Color.red);
                        break;
                    case 6:
                        jLabelCorrectLetter6.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter6.setForeground(Color.red);
                        break;
                    case 7:
                        jLabelCorrectLetter7.setText(word.substring(i, i + 1));
                        jLabelCorrectLetter7.setForeground(Color.red);
                        break;
                }

            }

        }
        
        
        skip.setEnabled(false);
        a.setEnabled(false);
        b.setEnabled(false);
        c.setEnabled(false);
        d.setEnabled(false);
        e.setEnabled(false);
        f.setEnabled(false);
        g.setEnabled(false);
        h.setEnabled(false);
        i.setEnabled(false);
        j.setEnabled(false);
        k.setEnabled(false);
        l.setEnabled(false);
        m.setEnabled(false);
        n.setEnabled(false);
        o.setEnabled(false);
        p.setEnabled(false);
        q.setEnabled(false);
        r.setEnabled(false);
        s.setEnabled(false);
        t.setEnabled(false);
        u.setEnabled(false);
        v.setEnabled(false);
        w.setEnabled(false);
        x.setEnabled(false);
        y.setEnabled(false);
        z.setEnabled(false);

    }

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        a.setEnabled(false);
        checkLetter('a');
    }//GEN-LAST:event_aActionPerformed

    private void bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionPerformed
        b.setEnabled(false);
        checkLetter('b');
    }//GEN-LAST:event_bActionPerformed

    private void cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cActionPerformed
        c.setEnabled(false);
        checkLetter('c');
    }//GEN-LAST:event_cActionPerformed

    private void eActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eActionPerformed
        e.setEnabled(false);
        checkLetter('e');
    }//GEN-LAST:event_eActionPerformed

    private void fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fActionPerformed
        f.setEnabled(false);
        checkLetter('g');
    }//GEN-LAST:event_fActionPerformed

    private void gActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gActionPerformed
        g.setEnabled(false);
        checkLetter('g');
    }//GEN-LAST:event_gActionPerformed

    private void hActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hActionPerformed
        h.setEnabled(false);
        checkLetter('h');
    }//GEN-LAST:event_hActionPerformed

    private void iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iActionPerformed
        i.setEnabled(false);
        checkLetter('i');
    }//GEN-LAST:event_iActionPerformed

    private void jActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActionPerformed
        j.setEnabled(false);
        checkLetter('j');
    }//GEN-LAST:event_jActionPerformed

    private void kActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kActionPerformed
        k.setEnabled(false);
        checkLetter('k');
    }//GEN-LAST:event_kActionPerformed

    private void lActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lActionPerformed
        l.setEnabled(false);
        checkLetter('l');
    }//GEN-LAST:event_lActionPerformed

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        m.setEnabled(false);
        checkLetter('m');
    }//GEN-LAST:event_mActionPerformed

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        n.setEnabled(false);
        checkLetter('n');
    }//GEN-LAST:event_nActionPerformed

    private void oActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oActionPerformed
        o.setEnabled(false);
        checkLetter('o');
    }//GEN-LAST:event_oActionPerformed

    private void pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pActionPerformed
        p.setEnabled(false);
        checkLetter('p');
    }//GEN-LAST:event_pActionPerformed

    private void qActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qActionPerformed
        q.setEnabled(false);
        checkLetter('q');
    }//GEN-LAST:event_qActionPerformed

    private void rActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rActionPerformed
        r.setEnabled(false);
        checkLetter('r');
    }//GEN-LAST:event_rActionPerformed

    private void tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tActionPerformed
        t.setEnabled(false);
        checkLetter('t');
    }//GEN-LAST:event_tActionPerformed

    private void uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uActionPerformed
        u.setEnabled(false);
        checkLetter('u');
    }//GEN-LAST:event_uActionPerformed

    private void vActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vActionPerformed
        v.setEnabled(false);
        checkLetter('v');
    }//GEN-LAST:event_vActionPerformed

    private void wActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wActionPerformed
        w.setEnabled(false);
        checkLetter('w');
    }//GEN-LAST:event_wActionPerformed

    private void xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xActionPerformed
        x.setEnabled(false);
        checkLetter('x');
    }//GEN-LAST:event_xActionPerformed

    private void yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yActionPerformed
        y.setEnabled(false);
        checkLetter('y');
    }//GEN-LAST:event_yActionPerformed

    private void zActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zActionPerformed
        z.setEnabled(false);
        checkLetter('z');
    }//GEN-LAST:event_zActionPerformed

    private void jButtonContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinueActionPerformed
        this.setVisible(false);
        MainFrm.displayFinalScore();
        reset();
    }//GEN-LAST:event_jButtonContinueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a;
    private javax.swing.JButton b;
    private javax.swing.JButton c;
    private javax.swing.JButton d;
    private javax.swing.JTextField datetime;
    private javax.swing.JButton e;
    private javax.swing.JButton f;
    private javax.swing.JButton g;
    private javax.swing.JButton h;
    private javax.swing.JLabel headline;
    private javax.swing.JButton i;
    private javax.swing.JButton j;
    private javax.swing.JButton jButtonContinue;
    private javax.swing.JLabel jLabelCorrectLetter0;
    private javax.swing.JLabel jLabelCorrectLetter1;
    private javax.swing.JLabel jLabelCorrectLetter2;
    private javax.swing.JLabel jLabelCorrectLetter3;
    private javax.swing.JLabel jLabelCorrectLetter4;
    private javax.swing.JLabel jLabelCorrectLetter5;
    private javax.swing.JLabel jLabelCorrectLetter6;
    private javax.swing.JLabel jLabelCorrectLetter7;
    private javax.swing.JLabel jLabelHangmanGraphic;
    private javax.swing.JLabel jLabelScore;
    private javax.swing.JPanel jPanelCorrectLetters;
    private javax.swing.JButton k;
    private javax.swing.JButton l;
    private javax.swing.JButton m;
    private javax.swing.JButton n;
    private javax.swing.JButton o;
    private javax.swing.JButton p;
    private javax.swing.JButton q;
    private javax.swing.JButton r;
    private javax.swing.JButton s;
    private javax.swing.JButton skip;
    private javax.swing.JButton t;
    private javax.swing.JButton u;
    private javax.swing.JButton v;
    private javax.swing.JButton w;
    private javax.swing.JButton x;
    private javax.swing.JButton y;
    private javax.swing.JButton z;
    // End of variables declaration//GEN-END:variables
}
